// <auto-generated />
using System;
using Auth0.WebApi.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Auth0.WebApi.Migrations
{
    [DbContext(typeof(CompanyDbContext))]
    partial class CompanyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Auth0.WebApi.Models.Company", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Auth0ApiIdentifier");

                    b.Property<string>("Auth0ClientId");

                    b.Property<string>("Auth0ClientSecret");

                    b.Property<string>("Auth0Domain");

                    b.Property<string>("AzureSQLCompanyDB");

                    b.Property<string>("AzureStorageAccount");

                    b.Property<string>("BlobContainer");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = 100,
                            Auth0ApiIdentifier = "https://mentalfish.eu.auth0.com/api/v2/",
                            Auth0ClientId = "VPrWFdD1eyJZZJfJXR6JUdlaJKO5Od5b",
                            Auth0ClientSecret = "iGGr983NbzVpqWDcYWHt3GUzZxJkil9vZKGM46MVDaukmdz4ooW5IDEpG7xs9AtW",
                            Auth0Domain = "mentalfish.eu.auth0.com",
                            AzureSQLCompanyDB = "Server=tcp:mentalversedbserver.database.windows.net,1433;Initial Catalog=MentalFishCompanyDB;Persist Security Info=False;User ID=Admin17;Password=Azure@123;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;",
                            AzureStorageAccount = "DefaultEndpointsProtocol=https;AccountName=mentalversestorage;AccountKey=j30iXmeuQJZnysPfS3RuZNXzt18rrBNjSWzrmxZck8ASfR+2X/JEsAuTjivY3cSBNvMaveIf3MPnQMbj60b9WQ==;EndpointSuffix=core.windows.net",
                            BlobContainer = "company-100",
                            Name = "MentalFish.no"
                        });
                });

            modelBuilder.Entity("Auth0.WebApi.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("CustomPropertyX");

                    b.Property<string>("DocType");

                    b.Property<int?>("IsAnimating");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int?>("Published");

                    b.Property<string>("SASToken");

                    b.Property<int?>("Shared");

                    b.Property<string>("Title");

                    b.Property<string>("URI");

                    b.HasKey("Id");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("Auth0.WebApi.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Permissions");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Editor",
                            Permissions = "RW"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Viewer",
                            Permissions = "R"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Admin",
                            Permissions = "RWD"
                        });
                });

            modelBuilder.Entity("Auth0.WebApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID");

                    b.Property<string>("Email");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
